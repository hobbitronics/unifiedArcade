{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "addPlayer.svelte",
    "navbar.svelte",
    "player.svelte",
    "_fallback.svelte",
    "hangman.svelte",
    "index.svelte",
    "ttt.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { createEventDispatcher } from 'svelte'\n    import { count, players} from './stores.js';\n    \n    let name;\n    let pid = 3\n\n    $: player = {\n        id: pid,\n        name : name,\n        points : $count\n    };\n    const onSubmit = () => {\n        pid++;\n        $players = [...$players, player];\n    }\n\n</script>\n<form class=\"controls\" on:submit|preventDefault={onSubmit}>\n    <input type=\"text\" placeholder=\"Your name\" bind:value={name}>\n    <input type=\"submit\" value=\"Save\" class =\"btn\"/>\n</form>\n<div class=\"controls\"><button on:click={() => $count = 0}>reset score</button></div>\n\n<style>\n    .controls {\n        display: inline;\n        margin: 5px, 0;\n        font-size: 18px;\n    }\n</style>",
    "<script>\n   \timport { count} from '../components/stores.js';\n</script>\n\n<style>\n    .nav {\n        display: inline-flex;\n        justify-content: space-around;\n        align-items: center;\n        font-size: 1.1em;\n        font-family: sans-serif;\n        width: 95%;\n        background-color: aqua;\n        padding: 20px;\n        border-radius: 10px;\n        margin: 10px;\n    }\n\n    @media only screen and (max-width: 840px) {\n        .nav {\n        display:list-item;\n        width: 97%;\n        background-color: aqua;\n        padding: 20px;\n        border-radius: 10px;\n        margin: 0 auto;\n        }\n    }\n\n</style>\n\n<div class=\"nav\">\n    <h1>Unified Arcade App</h1>\n\n    <h2>Your score: {$count}</h2>\n\n   <a href=\"./\">Scoreboard</a>\n   <a href=\"./ttt\">Tic Tac Toe</a>\n   <a href=\"./hangman\">Hangman</a>\n</div>",
    "<script>\n\texport let name = '';\n\texport let points;\n\texport let id;\n\n</script>\n\n<main>\n\n\t<h2>\n\t\t{id}: {name}\n\t</h2>\n\t<h3>points: {points}</h3><br/>\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n</style>",
    "<script>\n    import { url } from '@sveltech/routify'\n</script>\n\n<style>\n  .huge {\n    font-size: 12rem;\n  }\n  .e404 {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n  }\n</style>\n\n<div class=\"e404\">\n  <div class=\"huge\">404</div>\n  <div class=\"big\">Page not found. \n  <!-- link to the parent folder of _fallback.svelte -->\n  <a href={$url('../')}>Go back</a>\n  </div>\n</div>\n",
    "<script>\n    import { fly, fade, scale } from 'svelte/transition';\n    import { quintOut } from 'svelte/easing';\n    import APInputs from '../components/APIinputs.svelte'\n    import { count } from '../components/stores.js';\n    let game = [];\n    let won;\n    let word;\n    let wordArr = [];\n    let text;\n    let toggle = false;\n    let correct;\n    let guesses = [];\n    let graphic = [\"\", \"___\",\"|  O\",\"| -|-\",\"|  /|\",\"|___\"]\n    let hangman = [];\n    // onMount( () => {\n    //     const buttonRipple = mdc.ripple.MDCRipple.attachTo(document.querySelector('.mdc-button'));\n    //     return () => buttonRipple.destroy()\n    // })\n    $: chances = 6 - guesses.length;\n    $: won && $count++;\n    $: !chances && $count--;\n    $: gameOver = `${wordArr.join('')} was the word. Game Over, Click Restart to play again.`\n    \n    let wordList = [\n        'apple', 'answer', 'anchor', 'bananna', 'berry', 'boat', 'boot', 'cape', 'cap', 'case', 'chip', 'cherry', 'cone', 'dark', 'deep', 'donkey', 'eight', 'ever', 'elephant', 'fire', 'food', 'good', 'great', 'hour', 'ink', 'jar', 'jump', 'juggle', 'kick', 'kangaroo', 'leopard', 'moon', 'night', 'opera', 'people', 'quiet', 'right', 'scissor', 'temple', 'unicorn', 'victorious', 'wink', 'xylophone', 'yelp', 'zebra'  //list game chooses from\n    ];\n    \n    const getList = (e) => {\n    wordList = [];\n    wordList = e.detail.map(el => el.word);\n    console.log(wordList)\n    start();\n    wordList ? toggle = true : toggle = false;\n    }\n    \n    const randWord = () => wordList[Math.floor(Math.random()*wordList.length)];\n    \n    const start = () => {\n        won = false;\n        toggle = false;\n        word = randWord();\n        hangman = [];\n        guesses = [];\n        correct = undefined;\n        text = '';\n        wordArr = word.split('');   //turns the string into an array\n        game = wordArr.map(e => e = '_')\n        }\n    \n    const checkGuess = letter => wordArr.includes(letter) ? play(letter) : wrong(letter);\n    \n    const wrong = letter => {\n        hangman = [...hangman, graphic[guesses.length]]\n        guesses = [...guesses, letter];\n        correct = false;\n    }\n    \n    const play = letter => {\n        wordArr.forEach((el, index) => el === letter ? game[index] = letter : null)\n        compareArrays()\n        correct = true;\n    }\n    \n    const compareArrays = () => JSON.stringify(game) === JSON.stringify(wordArr) ? won = true : won =false;\n    \n    start();\n    \n    </script>\n    \n    <main transition:scale=\"{{duration: 1000, delay: 200, opacity: 0.5, start: 0, easing: quintOut}}\">\n        <h1>Welcome to Hangman</h1>\n        <APInputs on:getlist={getList}/>\n        {#if toggle}\n            <p>The wordlist is ready.</p>\n        {/if}\n    \n        {#if !won && chances > 0}\n            <h3>You have {chances} guesses.</h3>\n            <span>Your guess:</span>\n            <input bind:value={text} on:keydown={(event) => {if (event.key === 'Enter') checkGuess(text.toLowerCase())} } >\n            <button on:click={() => checkGuess(text.toLowerCase())} class=\"mdc-button mdc-button--raised\">\n                <div class=\"mdc-button__ripple\"></div>\n                <span class=\"mdc-button__label\">guess</span>\n            </button>\n        {:else if !chances}\n            <h2>{gameOver}</h2>\n        {/if}\n    \n        <span>Wrong guesses: {guesses}</span>\n        {#if won}\t\n            <p class=\"congrats\">'You won! Click reset to play again'</p>\n        {:else if correct === undefined}\n                <p>New Game</p>\n        {:else if correct}\n            <p>'You got a letter right!'</p>\n        {:else if !correct}\n                <p>'Sorry, you guessed wrong.'</p>\n        {/if}\n        <div id=\"game\">{game.join(' ')}</div>\n    \n        <button on:click={() => start()} class=\"mdc-button mdc-button--outlined\">\n            <div class=\"mdc-button__ripple\"></div>\n            <span class=\"mdc-button__label\">Reset</span>\n        </button>\n        \n        {#each hangman as man}\n            <p class=\"man\">{man}</p>\n        {/each}\n    </main>\n    \n    <style>\n        main {\n            text-align: center;\n            font-family: sans-serif;\n            padding: 1em;\n            max-width: 240px;\n            margin: 0 auto;\n        }\n    \n        h1 {\n            color:darkblue;\n            text-transform: none;\n            font-size: 2em;\n            font-weight: 100;\n        }\n    \n        @media (min-width: 640px) {\n            main {\n                max-width: none;\n            }\n        }\n    \n        #game {\n            font-size: 2.5em;\n          }\n          span, p {\n            font-size: 1.5em;\n            padding-right: 1px;\n            margin: 5px;\n          }\n          \n          input {\n            font-size: 1.5em;\n            width: 150px;\n          }\n    \n          .congrats {\n              font-size: 1.5em;\n              font-weight: bold;\n              color: rgb(255, 0, 225);\n          }\n    \n          .man {\n              text-align: center;\n          }\n    </style>",
    "<script>\n    import { metatags } from '@sveltech/routify'\n    import { flip } from 'svelte/animate';\n\timport Player from '../components/player.svelte'\n\timport AddPlayer from '../components/addPlayer.svelte'\n\timport { count, players} from '../components/stores.js';\n\t// import Button from '@smui/button';\n    metatags.title = 'Arcade with routify'\n    metatags.description = 'Play all your favourite games in one spot'\n\t\n\tlet name;\n\t$: $players[$players.length-1].points = $count\n\t$: toggle = true;\n\t$: currPlayer =\n\t\t{\n\t\t\tid: 0,\n\t\t\tname: $players[$players.length-1].name,\n\t\t\tpoints: $count\n\t\t}\n\n\tconst removePlayer = () => $players = $players.filter(player => player.name !== name)\n\t\n</script>\n\n<div class=\"controls\">\n\t<AddPlayer/>\n\t<form on:click|preventDefault={removePlayer}>\n\t\t<input type=\"text\" placeholder=\"Player to remove\" bind:value={name}>\n\t\t<input type=\"submit\" value=\"Remove Player\" class =\"btn\"/>\n\t</form>\n</div>\n\n<div class=\"currPlayer\">\n\t<h2>{currPlayer.name}</h2>\n\t<h3>points: {$count}</h3>\n</div>\n\n<h2 id=\"minibar\">Games</h2>\n<div class=\"gameList\">\n\t<a href=\"./ttt\">Tic Tac Toe</a>\n\t<br/>\n\t<a href=\"./hangman\">Hangman</a>\n</div>\n\n<h2 id=\"minibar\">High Scores</h2>\n\n<button on:click={() => toggle = !toggle}>{#if toggle}-{:else}+{/if}</button>\n\n<span>High Scores</span>\n\n<div>\n\t{#if $players.length === 0}\n\t\t<p>No High Scores</p>\n\t{:else if toggle}\n\t\t{#each $players as player (player.id)}\n\t\t\t<div animate:flip=\"{{duration: 200}}\">\n\t\t\t\t<Player name={player.name} points={player.points} id={player.id}/>\n\t\t\t</div>\n\t\t{/each}\n\t{/if}\n</div>\n\n<p>Visit <a href=\"https://github.com/hobbitronics\" target=\"blank\">my Github page</a> to see more of my projects.</p>\n\n<style>\n\tspan {\n        font-size: 1.2em;\n\t\tfont-family: sans-serif;\n        padding: 1px;\n        margin: 5;\n    \t}\n\n\t.currPlayer, .gameList {\n\t\tdisplay: flex-box;\n\t\talign-content: space-around;\n\t\ttext-align: center;\n\t\tfont-family: sans-serif;\n\t\tpadding: 5px;\n\t\tmargin: 30px auto;\n\t\tfont-size: 22px;\n\t}\n\n\t#minibar {\n\t\tfont-family: sans-serif;\n\t\tbackground-color: rgb(55, 135, 233);\n\t\tpadding: .7em;\n\t\tborder-radius: 10px;\n\t\tmargin: 10px;\n\t\ttext-align: center;\n\t}\n\n\tbutton {\n\t\tmargin: 15px;\n\t\tfont-family: sans-serif;\n\t}\n\n\t.controls {\n\t\tposition: fixed;\n\t\tpadding: 5px\n\t}\n\n</style>",
    "<script>\n\timport { fly, fade, scale } from 'svelte/transition';\n\timport { elasticOut } from 'svelte/easing';\n\timport { quintOut } from 'svelte/easing';\n    import { count } from '../components/stores.js';\n\n\tlet grid = ['','','','','','','','',''];\n\tlet winner;\n\tlet turnCount = 0;\n\tlet pcTurnCount = 0;\n\t$: totalCount = turnCount + pcTurnCount;\n\tlet success = false;\n\tlet blocked = false;\n\t$: winner === \"O\" && $count++;\n\t$: winner === \"X\" && $count--;\n    \n\t\n\tconst reset = () => {\n\t  grid = ['','','','','','','','',''];\n\t  winner = undefined;\n\t  turnCount = 0;\n\t  pcTurnCount = 0;\n\t}\n\t\n\tfunction spin(node, { duration }) {\n\t\treturn {\n\t\t\tduration,\n\t\t\tcss: t => {\n\t\t\t\tconst eased = elasticOut(t);\n\n\t\t\t\treturn `\n\t\t\t\t\ttransform: scale(${eased}) rotate(${eased * 720}deg);\n\t\t\t\t\tcolor: hsl(\n\t\t\t\t\t\t${~~(t * 360)},\n\t\t\t\t\t\t${Math.min(100, 1000 - 1000 * t)}%,\n\t\t\t\t\t\t${Math.min(50, 500 - 500 * t)}%\n\t\t\t\t\t);`\n\t\t\t}\n\t\t};\n\t}\n\n\t//winning conditions Across rows\t\n  function winA (player) {\n    for (let i = 0; i < 7 ; i+=3) {  // i is 0 then 3 then 6\n      if (grid[i] === player && grid[i+1] === player && grid[i+2] === player){  // covers 0,1,2/ 3,4,5/ 6,7,8\n          winner = player;\n        }\n      }\n    //winning conditions down colums\n    for (let h = 0; h < 3 ; h++) {  // h 0, 1, 2\n      if (grid[h] === player && grid[h+3] === player && grid[h+6] === player){  // covers 0,3,6  1,4,7  2,5,8\n        winner = player;\n        }\n      }\n    //diagonal winning conditions\n        if ( (grid[0] + grid[4] + grid[8]) === (player+player+player) || (grid[2] + grid[4] + grid[6]) === (player+player+player)){  // covers 0,3,6  1,4,7  2,5,8\n          winner = player;\n\t\t}\n\t\tconsole.log($count)\n\t}\n\t\n\t//generates random number for pc player\n\tconst rand = () => {\n\t\tconst number = Math.floor(Math.random()*9);\n\t\treturn (!grid[number] ? number : rand())\n      }\n\n\t//called with mousedown on a box\n\tconst play = choice => {\n\t\t  turnCount +=1;\n\t\t  grid[choice] = 'O';                            //sets the grid number on the board to 'O'\n\t\t  success = true;\n\t\t  winA('O');   //check for a win\n\t}\n\t//called on mouseup\n\tconst computer = async () => {\n\t\t\tpcTurnCount+=1;\n\t\t\tsuccess = false;\n\t\t\tconst delay = new Promise(resolve => setTimeout(() => resolve('completed'), 500));\t\t\n\t\t\tawait delay//.then((message) => {\n\t\t\tgrid[rand()] = 'X';\t\t\t//sets X on random board tile\n\t\t\twinA('X');  //})\n\t}\n\n\tconst pcCanPLay = () => turnCount === (1 + pcTurnCount) && totalCount < 9 && !winner && success\t\n\n\tconst uCanPlay = i => !winner && turnCount === pcTurnCount && !blocked && !grid[i]  \n\n</script>\n\n<main transition:scale=\"{{duration: 1000, delay: 200, opacity: 0.5, start: 0, easing: quintOut}}\">\n\t<h1>Welcome to Tic Tac Toe!</h1>\n    {#if winner === 'O'}\n        <p>You got a point.</p>\n\t\t<h3 in:spin=\"{{duration: 6000}}\">Congratulations, you won!</h3>\n    {:else if winner === 'X'}\n        <p>You lost a point.</p>\n\t\t<h3 transition:fly=\"{{ y: -100, duration: 2000 }}\">The computer won.</h3>\n\t{:else if totalCount >= 9}\n\t\t<h3 transition:fly=\"{{ y: -100, duration: 2000 }}\">It's a tie!</h3>\n\t{/if}\n\t<div class=\"grid-container\">\n\t\t{#each grid as square, i (i)}\t\n\t\t\t<div id={i} on:mousedown={() => uCanPlay(i) && play(i)} on:mouseup={() => pcCanPLay() && computer()} class=\"grid-item\">\n\t\t\t\t{#if square}\n\t\t\t\t<p transition:fade\n                on:introstart={() => blocked = true}\n                on:introend={() => blocked = false}\n                >{square}</p>\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t{/each}\n\t</div>\n\n\t<button on:click={() => reset()} class=\"mdc-button mdc-button--outlined\">\n\t\t<div class=\"mdc-button__ripple\"></div>\n\t\t<span class=\"mdc-button__label\">Reset The Game</span>\n\t</button>\n\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 80%;\n\t\tmargin: 0 auto;\n\t}\n\n\tspan {\n            font-size: 1.5em;\n            padding-right: 1px;\n            margin: 0;\n    \t }\n\n\th1 {\n\t\tcolor: darkblue;\n        text-transform: none;\n        font-size: 2em;\n        font-weight: 100;\n\t}\n\n\t.grid-container {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto auto auto;\n\t\tbackground-color: #2196F3;\n\t\tgrid-gap: 10px;\n\t\tpadding: 10px;\n\t\theight: 500px;\n\t\twidth: 500px;\n\t\tmargin: 10px auto;\n\t}\n\n\t.grid-item {\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\n  \t\tborder: 1px solid rgba(0, 0, 0, 0.8);\n  \t\tfont-size: 50px;\n  \t\ttext-align: center;\n\t\twidth: 155px;\n\t\theight: 155px;\n\t}\n\n\t@media only screen and (max-width: 640px) {\n\t\tmain {\n\t\ttext-align: center;\n\t\tfont-family: sans-serif;\n\t\tpadding: .5em;\n\t\tmax-width: none;\n\t\tmargin: 0 auto;\n\t\t}\n\n\t\t.grid-container {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: auto auto auto;\n\t\tbackground-color: #2196F3;\n\t\tgrid-gap: 5px;\n\t\tpadding: 5px;\n\t\theight: 250px;\n\t\twidth: 250px;\n\t\tmargin: 5px auto;\n\t\t}\n\t\t.grid-item {\n\t\tbackground-color: rgba(255, 255, 255, 0.8);\n  \t\tborder: 1px solid rgba(0, 0, 0, 0.8);\n  \t\tfont-size: 30px;\n  \t\ttext-align: center;\n\t\twidth: 77px;\n\t\theight: 77px;\n\t\t}\n\t}\n\n</style>"
  ],
  "names": [],
  "mappings": "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"
}